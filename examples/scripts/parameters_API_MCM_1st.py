"""
    This file contains the user-defined parameters for the GECKO-A mechanism generation.
"""

### ----------------------User-defined parameters-------------------------

## Path to the UManSysProp directory
path_to_umansysprop = "./UManSysProp_public-master/"

## File settings
# output_dir: Path to the output directory.
output_dir = "./examples/outputs/"

# chem_id: Identifier for the output mechanism
# NOTE: This is used to name the output files:
# e.g., [chem_id].species, [chem_id].reactions, [chem_id].aer, [chem_id].aer.1st, [chem_id].aer.vec, [chem_id].RO2, [chem_id].mol
chem_id = "MCM_API"

# reaction_file: Path to the file containing the mechanism
# NOTE: For GECKO mechanism, reaction_file is the FOLDER containing the mechanism files.
# No need to further specify species_file and species_type.
reaction_file = "./examples/inputs/API_MCM/mcm_API_reactions.fac"
# reaction_type: 'FACSMILE' for MCM, 'GECKO', 'SSH'
reaction_type = "FACSMILE"

# species_file: Path to the file containing the species information
species_file = "./examples/inputs/API_MCM/mcm_API_species.tsv"
# species_type: 'MCM', 'GECKO', 'SSH'
species_type = "MCM"

## Aerosol properties
# soap_file: Path to the file containing the SOAP decomposition information. If not available, set to None.
# NOTE: This file is generated by running SSH-aerosol with the aerosol species list [name].aer.1st
soap_file = None
#soap_file = "./examples/inputs/ISOP_MCM/smile2UNIFAC.soap"

## Saturation vapor pressure computed by UManSysProp (Topping et al., 2016)
# vptype: VP0BP0, VP0BP1, VP0BP2, VP1BP0, VP1BP1, VP1BP2, evap, simpol
# VP for vapor ponit : 0 - Nannoolal et al., 2008, 1 - Myrdal and Yalkowsky, 1997
# BP for boilling point: 0 - Nannoolal et al., 2004, 1 - Stein and Brown, 1994, 2 - Joback and Reid, 1987
# 'evap': EVAPORATION of Compernolle et al. (2011)
# 'simpol': SIMPOL.1 of Pankow and Asher (2008)
vptype = "simpol"

# psat_nvoc: non-volatile if Psat < psat_nvoc in atm. If all species are volatile or semi-volatile, set to None.
psat_nvoc = None
# psat_svoc: volatile if Psat > psat_svoc in atm. This species will not be included in the aerosol species list.
psat_svoc = 1e-3

## Other basic settings
# tag_fake: If True, add fake species to the mechanism to record the production of radicals.
tag_fake = False
# species_list_aer: default aerosol species list - the first 10 lines and the last line of this file are used to generate new aerosol species list.
species_list_aer_init = "./data/species-list-aer-genoa.dat"
# basic_species_files: default list of inorganic species
basic_species_files = [
    "./data/ssh_basic_species.dat",
    "./data/GECKO_basic_species.dat",
    "./data/mcm_species.dat",
]
# ./data/GECKO_basic_species.dat
# ./dara/mcm_species.dat

# Total No. functional group in SOAP
n_soap_group = 60

# Species involved in the reaction list but do not participate in reduction
basicsps_dict = {}
for ifile in basic_species_files:
    with open(ifile, "r") as f:
        lines = f.read().splitlines()
    for line in lines:
        line = line.strip()
        if line == "" or line.startswith("#") or line.startswith("%"):
            continue
        parts = [i for i in line.replace("\t", " ").split(" ") if i != ""]
        if len(parts) == 2:
            s, mw = parts[0], float(parts[1])
            if s not in basicsps_dict.keys():
                basicsps_dict[s] = mw
            else:  # already recorded, check value
                if basicsps_dict[s] != mw:
                    print(
                        f"species {s} has different molar mass. Update its mass from {basicsps_dict[s]} to {mw}."
                    )
                    basicsps_dict[s] = mw
        else:
            print(
                f"!!! Can not read species information from file: {line} in file {ifile}\n"
            )
BaseSpecies = set(basicsps_dict.keys())
print(
    f"Load in total # {len(basicsps_dict)} basic species from the default list and {basic_species_files}."
)
